package zodiac.zpt.shared.testsites;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import zodiac.zpt.shared.common.AbstractUrlImageFieldData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "zodiac.zpt.client.testsites.TestSiteForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TestSiteFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	public AssignedTech getAssignedTech() {
		return getFieldByClass(AssignedTech.class);
	}

	public AutomationNotes getAutomationNotes() {
		return getFieldByClass(AutomationNotes.class);
	}

	public AutomationType getAutomationType() {
		return getFieldByClass(AutomationType.class);
	}

	public City getCity() {
		return getFieldByClass(City.class);
	}

	public CleanerNotes getCleanerNotes() {
		return getFieldByClass(CleanerNotes.class);
	}

	public Email getEmail() {
		return getFieldByClass(Email.class);
	}

	public EqAboveBelowWater getEqAboveBelowWater() {
		return getFieldByClass(EqAboveBelowWater.class);
	}

	public EqIndoorOutdoor getEqIndoorOutdoor() {
		return getFieldByClass(EqIndoorOutdoor.class);
	}

	public EquipPic getEquipPic() {
		return getFieldByClass(EquipPic.class);
	}

	public FirstName getFirstName() {
		return getFieldByClass(FirstName.class);
	}

	public GasType getGasType() {
		return getFieldByClass(GasType.class);
	}

	public HasAutomation getHasAutomation() {
		return getFieldByClass(HasAutomation.class);
	}

	public HasIAqualink getHasIAqualink() {
		return getFieldByClass(HasIAqualink.class);
	}

	public HasInfloors getHasInfloors() {
		return getFieldByClass(HasInfloors.class);
	}

	public HasSolar getHasSolar() {
		return getFieldByClass(HasSolar.class);
	}

	public HeaterNotes getHeaterNotes() {
		return getFieldByClass(HeaterNotes.class);
	}

	public IAqualinkDeviceNumber getIAqualinkDeviceNumber() {
		return getFieldByClass(IAqualinkDeviceNumber.class);
	}

	public LastName getLastName() {
		return getFieldByClass(LastName.class);
	}

	public MarketingPoolGroup getMarketingPoolGroup() {
		return getFieldByClass(MarketingPoolGroup.class);
	}

	public NDAIssueDate getNDAIssueDate() {
		return getFieldByClass(NDAIssueDate.class);
	}

	public Phone getPhone() {
		return getFieldByClass(Phone.class);
	}

	public PoolDimensions getPoolDimensions() {
		return getFieldByClass(PoolDimensions.class);
	}

	public PoolFinish getPoolFinish() {
		return getFieldByClass(PoolFinish.class);
	}

	public PoolLayout getPoolLayout() {
		return getFieldByClass(PoolLayout.class);
	}

	public PoolNotes getPoolNotes() {
		return getFieldByClass(PoolNotes.class);
	}

	public PoolPic getPoolPic() {
		return getFieldByClass(PoolPic.class);
	}

	public PoolShape getPoolShape() {
		return getFieldByClass(PoolShape.class);
	}

	public PoolVolume getPoolVolume() {
		return getFieldByClass(PoolVolume.class);
	}

	public PressureRef getPressureRef() {
		return getFieldByClass(PressureRef.class);
	}

	public PressureType getPressureType() {
		return getFieldByClass(PressureType.class);
	}

	public RoboticRef getRoboticRef() {
		return getFieldByClass(RoboticRef.class);
	}

	public ServiceContact getServiceContact() {
		return getFieldByClass(ServiceContact.class);
	}

	/**
	 * access method for property SiteId.
	 */
	public String getSiteId() {
		return getSiteIdProperty().getValue();
	}

	/**
	 * access method for property SiteId.
	 */
	public void setSiteId(String siteId) {
		getSiteIdProperty().setValue(siteId);
	}

	public SiteIdProperty getSiteIdProperty() {
		return getPropertyByClass(SiteIdProperty.class);
	}

	public SiteNotes getSiteNotes() {
		return getFieldByClass(SiteNotes.class);
	}

	public State getState() {
		return getFieldByClass(State.class);
	}

	public Street getStreet() {
		return getFieldByClass(Street.class);
	}

	public SuctionRef getSuctionRef() {
		return getFieldByClass(SuctionRef.class);
	}

	public SuctionType getSuctionType() {
		return getFieldByClass(SuctionType.class);
	}

	public ZIP getZIP() {
		return getFieldByClass(ZIP.class);
	}

	public static class AssignedTech extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class AutomationNotes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class AutomationType extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class City extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class CleanerNotes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class Email extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class EqAboveBelowWater extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class EqIndoorOutdoor extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class EquipPic extends AbstractUrlImageFieldData {

		private static final long serialVersionUID = 1L;
	}

	public static class FirstName extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class GasType extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class HasAutomation extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class HasIAqualink extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class HasInfloors extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class HasSolar extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class HeaterNotes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class IAqualinkDeviceNumber extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class LastName extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class MarketingPoolGroup extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class NDAIssueDate extends AbstractValueFieldData<Date> {

		private static final long serialVersionUID = 1L;
	}

	public static class Phone extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolDimensions extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolFinish extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolLayout extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolNotes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolPic extends AbstractUrlImageFieldData {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolShape extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class PoolVolume extends AbstractValueFieldData<Integer> {

		private static final long serialVersionUID = 1L;
	}

	public static class PressureRef extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class PressureType extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class RoboticRef extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class ServiceContact extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class SiteIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class SiteNotes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class State extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class Street extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class SuctionRef extends AbstractValueFieldData<Boolean> {

		private static final long serialVersionUID = 1L;
	}

	public static class SuctionType extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class ZIP extends AbstractValueFieldData<Integer> {

		private static final long serialVersionUID = 1L;
	}
}
