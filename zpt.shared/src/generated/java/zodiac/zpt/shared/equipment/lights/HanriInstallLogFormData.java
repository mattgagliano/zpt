package zodiac.zpt.shared.equipment.lights;

import java.util.Date;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.AbstractValueFieldData;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications
 * recommended.
 */
@Generated(value = "zodiac.zpt.client.equipment.lights.HanriInstallLogForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class HanriInstallLogFormData extends AbstractFormData {

	private static final long serialVersionUID = 1L;

	/**
	 * access method for property HanriLightId.
	 */
	public String getHanriLightId() {
		return getHanriLightIdProperty().getValue();
	}

	/**
	 * access method for property HanriLightId.
	 */
	public void setHanriLightId(String hanriLightId) {
		getHanriLightIdProperty().setValue(hanriLightId);
	}

	public HanriLightIdProperty getHanriLightIdProperty() {
		return getPropertyByClass(HanriLightIdProperty.class);
	}

	public InstallDate getInstallDate() {
		return getFieldByClass(InstallDate.class);
	}

	public InstallerNames getInstallerNames() {
		return getFieldByClass(InstallerNames.class);
	}

	public LightColor getLightColor() {
		return getFieldByClass(LightColor.class);
	}

	public NicheSizeBox getNicheSizeBox() {
		return getFieldByClass(NicheSizeBox.class);
	}

	public Notes getNotes() {
		return getFieldByClass(Notes.class);
	}

	public OnAutomationBox getOnAutomationBox() {
		return getFieldByClass(OnAutomationBox.class);
	}

	public RunHours getRunHours() {
		return getFieldByClass(RunHours.class);
	}

	public SequenceCorrectBox getSequenceCorrectBox() {
		return getFieldByClass(SequenceCorrectBox.class);
	}

	public Serial getSerial() {
		return getFieldByClass(Serial.class);
	}

	public TestSite getTestSite() {
		return getFieldByClass(TestSite.class);
	}

	public VoltageGroup getVoltageGroup() {
		return getFieldByClass(VoltageGroup.class);
	}

	public WaterIntrusionBox getWaterIntrusionBox() {
		return getFieldByClass(WaterIntrusionBox.class);
	}

	public static class HanriLightIdProperty extends AbstractPropertyData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class InstallDate extends AbstractValueFieldData<Date> {

		private static final long serialVersionUID = 1L;
	}

	public static class InstallerNames extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class LightColor extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class NicheSizeBox extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class Notes extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class OnAutomationBox extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class RunHours extends AbstractValueFieldData<Integer> {

		private static final long serialVersionUID = 1L;
	}

	public static class SequenceCorrectBox extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class Serial extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class TestSite extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class VoltageGroup extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}

	public static class WaterIntrusionBox extends AbstractValueFieldData<String> {

		private static final long serialVersionUID = 1L;
	}
}
